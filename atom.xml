<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog by seamlik</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://seamlik.github.io/"/>
  <updated>2019-12-17T02:50:17.179Z</updated>
  <id>https://seamlik.github.io/</id>
  
  <author>
    <name>ÊÆ∑ÂïüËÅ∞ | Kai-Chung Yan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>My Open-Source Activities from January to August 2019</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-January-to-August-2019.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-January-to-August-2019.html</id>
    <published>2019-08-23T06:41:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome, reader! This is a infrequently updated post series that logs my activities within open-source communities. I do not work on open-source full-time, although I sincerely would love to. Therefore the posts may cover a ridiculously long period (even a whole year).</p><h2 id="Debian-amp-Google-Summer-of-Code"><a href="#Debian-amp-Google-Summer-of-Code" class="headerlink" title="Debian &amp; Google Summer of Code"></a>Debian &amp; Google Summer of Code</h2><p>Debian is a general-purpose Linux distribution that is widely used on the planet. I am a Debian Developer who works on packages related to Android SDK and the Java ecosystem.</p><p>I started a new package in an attempt to build the Android framework <code>android.jar</code> using the upstream build systems involving <a href="https://ninja-build.org" target="_blank" rel="noopener">Ninja</a>, <a href="https://android.googlesource.com/platform/build/soong" target="_blank" rel="noopener">Soong</a> and others. Since the beginning we have been writing our own (very simple) makefiles to build the binaries in AOSP because their build logic tends to be simple and straightforward, until we worked on <code>android.jar</code>. Building it requires digging in so much code that it became incredibly hard to maintain, which is why we still haven‚Äôt brought in any newer version since <a href="https://tracker.debian.org/pkg/android-framework-23" target="_blank" rel="noopener"><code>android-framework-23</code></a>. This is problematic as developers can‚Äôt build any apps that target Android 7+.</p><p>After a month of work, <a href="https://salsa.debian.org/android-tools-team/android-sdk-platform-latest" target="_blank" rel="noopener">this package</a> is finally done. After all its dependencies are packaged in the future, it will be good to upload. This is where the students of Google Summer of Code (GSoC) come in!</p><p>This year‚Äôs GSoC projects related to Android SDK are:</p><ul><li><a href="https://wiki.debian.org/SummerOfCode2019/ProjectProposals/Kotlin" target="_blank" rel="noopener">Packaging Kotlin</a> by <a href="https://salsa.debian.org/m36-guest" target="_blank" rel="noopener">@m36</a></li><li><a href="https://wiki.debian.org/SummerOfCode2019/ApprovedProjects/Android%20SDK%20Tools%20in%20Debian" target="_blank" rel="noopener">Packaging dependencies of <code>android.jar</code></a> by <a href="https://salsa.debian.org/kt-guest" target="_blank" rel="noopener">@kt</a>.</li></ul><p>Thanks to their hard work, we managed to upload these packages to Debian:</p><ul><li><a href="https://salsa.debian.org/android-tools-team/android-platform-build-kati" target="_blank" rel="noopener">android-platform-build-kati</a></li><li><a href="https://tracker.debian.org/news/1048095/accepted-android-platform-external-doclava-900r42-1-source-into-experimental/l" target="_blank" rel="noopener">android-platform-external-doclava</a></li><li><a href="https://salsa.debian.org/android-tools-team/android-platform-external-nist-sip" target="_blank" rel="noopener">android-platform-external-nist-sip</a></li><li><a href="https://salsa.debian.org/android-tools-team/android-platform-external-rappor" target="_blank" rel="noopener">android-platform-external-rappor</a></li><li><a href="https://salsa.debian.org/android-tools-team/android-platform-system-tools-hidl" target="_blank" rel="noopener">android-platform-system-tools-hidl</a></li><li><a href="https://salsa.debian.org/java-team/jengelman-shadow" target="_blank" rel="noopener">jengleman-shadow</a></li><li><a href="https://tracker.debian.org/news/1050485/accepted-android-platform-build-1810r23-3-source-all-amd64-into-unstable-unstable" target="_blank" rel="noopener">makeparallel</a></li></ul><h2 id="Voidbuilder"><a href="#Voidbuilder" class="headerlink" title="Voidbuilder"></a>Voidbuilder</h2><p><a href="https://www.npmjs.com/package/voidbuilder" target="_blank" rel="noopener">Voidbuilder</a> is a simple program that mimics <a href="https://packages.debian.org/sid/pbuilder" target="_blank" rel="noopener"><code>pbuilder</code></a> but uses <a href="https://docker.com" target="_blank" rel="noopener">Docker</a> and requires zero configuration. I have been using it privately and am quite satisfied.</p><p>I made some bugfixes and adopted Node.js 12 so that it can make use the <a href="https://medium.com/@nodejs/announcing-a-new-experimental-modules-1be8d2d6c2ff" target="_blank" rel="noopener">latest experimental ES Modules support</a>. Version <a href="https://salsa.debian.org/seamlik/voidbuilder/commit/be4a62e316f8c03e31c870831ab3fc33a2fd3178" target="_blank" rel="noopener">1.0.0</a> and <a href="https://salsa.debian.org/seamlik/voidbuilder/commit/8459b54c3afa5ee76118073cd3026b1c5be7259a" target="_blank" rel="noopener">1.0.1</a> have been released.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome, reader! This is a infrequently updated post series that logs my activities within open-source communities. I do not work on open
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from November to December 2018</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-November-to-December-2018.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-November-to-December-2018.html</id>
    <published>2019-01-21T07:27:43.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome, reader! This is a infrequently updated post series that logs my activities within open-source communities. I want my work to be as transparent as possible in order to promote open governance, a policy feared even by some ‚Äúmighty‚Äù nations.</p><p>I do not work on open-source full-time, although I sincerely would love to. Therefore the posts may cover a ridiculously long period (even a whole year).</p><h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><p>Debian is a general-purpose Linux distribution that is widely used on the planet. I am a Debian Developer who works on packages related to Android SDK and the Java ecosystem.</p><p>After a month of hardwork, I finally finished the packaging of <a href="https://tracker.debian.org/pkg/android-platform-art" target="_blank" rel="noopener"><code>android-platform-art</code></a>. The tricky part was that this package is the first of our Android SDK packages that fails to build using GCC, which was realized only after I had patched an awful lot of code.</p><p>Other activities include:</p><ul><li>Many changes to <code>android-platform-system-core</code> (<a href="https://tracker.debian.org/news/1001030/accepted-android-platform-system-core-1810r23-2-source-amd64-all-into-unstable-unstable/" target="_blank" rel="noopener">1:8.1.0+r23-2</a> <a href="https://tracker.debian.org/news/1003371/accepted-android-platform-system-core-1810r23-3-source-into-unstable/" target="_blank" rel="noopener">1:8.1.0+r23-3</a> <a href="https://tracker.debian.org/news/1008061/accepted-android-platform-system-core-1810r23-4-source-into-unstable/" target="_blank" rel="noopener">1:8.1.0+r23-4</a>) and now it builds on kFreeBSD!</li><li>Finally got my Debian account.</li></ul><h2 id="Voidbuilder-Release-0-3-0"><a href="#Voidbuilder-Release-0-3-0" class="headerlink" title="Voidbuilder Release 0.3.0"></a>Voidbuilder Release 0.3.0</h2><p><a href="https://www.npmjs.com/package/voidbuilder" target="_blank" rel="noopener">Voidbuilder</a> is a simple program that mimics <a href="https://packages.debian.org/sid/pbuilder" target="_blank" rel="noopener"><code>pbuilder</code></a> but uses <a href="https://docker.com" target="_blank" rel="noopener">Docker</a> as the container engine. I have been using it privately and am quite satisfied.</p><p>I released <a href="https://salsa.debian.org/seamlik/voidbuilder/blob/master/CHANGELOG.md#030-2018-12-15" target="_blank" rel="noopener">0.3.0</a> in December. A notable change is that it now prints the build result in details, just like <code>sbuild</code> does.</p><h2 id="Other-Activities"><a href="#Other-Activities" class="headerlink" title="Other Activities"></a>Other Activities</h2><p>Pushed a <a href="https://android-review.googlesource.com/c/platform/tools/base/+/852369" target="_blank" rel="noopener">patch</a> to AOSP that removes a SUN API usage for Base64. Now let‚Äôs see if it will get accepted in 10 years‚Ä¶ üò™</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome, reader! This is a infrequently updated post series that logs my activities within open-source communities. I want my work to be 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from September to October 2018</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-September-October-2018.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-September-October-2018.html</id>
    <published>2018-11-06T11:49:37.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome readers, this is a infrequently updated post series that logs my activities within open-source communities. I want my work to be as transparent as possible in order to promote open governance, a policy feared even by some ‚Äúmighty‚Äù nations.</p><p>I do not work on open-source full-time, although I sincerely would love to. Therefore the posts may cover a ridiculously long period (even a whole year).</p><p>Unfortunately this blog site does not support commenting. So if anyone has anything to discuss regarding the posts, feel free to reach me via the social links at the footer of the page.</p><h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><p>Debian is a general-purpose Linux distribution that is widely used on the planet. I am currently a Debian Maintainer who works on packages related to Android SDK and the Java ecosystem.</p><ul><li>Continued the updating of Android SDK family to Oreo<ul><li>Uploaded <a href="https://tracker.debian.org/news/997858" target="_blank" rel="noopener"><code>android-platform-build</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/997840" target="_blank" rel="noopener"><code>android-platform-dalvik</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/995608" target="_blank" rel="noopener"><code>android-platform-development</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/994109" target="_blank" rel="noopener"><code>android-platform-frameworks-base</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/964503" target="_blank" rel="noopener"><code>android-platform-libcore</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/999760" target="_blank" rel="noopener"><code>android-platform-libnativehelper</code></a></li><li>Uploaded <code>android-platform-system-core</code> providing <a href="https://tracker.debian.org/news/987521" target="_blank" rel="noopener">ADB</a> and <a href="https://tracker.debian.org/news/997309" target="_blank" rel="noopener"><code>fastboot</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/995237" target="_blank" rel="noopener"><code>android-platform-system-extras</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/994805" target="_blank" rel="noopener"><code>android-platform-system-tools-aidl</code></a></li></ul></li><li>All Android SDK packages of Oreo release are now in Unstable</li></ul><h3 id="Some-Android-SDK-Packages-Now-Available-on-Every-Architecture"><a href="#Some-Android-SDK-Packages-Now-Available-on-Every-Architecture" class="headerlink" title="Some Android SDK Packages Now Available on Every Architecture"></a>Some Android SDK Packages Now Available on Every Architecture</h3><p>For a long time our packages are only available on x86, ARM and MIPS architectures. This is due to the fact that AOSP is only designed to support those 3 major instruction sets in the market. Another physical limitation is that <a href="https://android.googlesource.com/platform/external/libunwind" target="_blank" rel="noopener"><code>libunwind</code></a>, a common dependency by most Android SDK components, can only be built on said architectures after being patched by AOSP. ADB and <code>fastboot</code> now even removed the support on MIPS because we now build them against <a href="https://boringssl.googlesource.com/boringssl" target="_blank" rel="noopener">BoringSSL</a> which does not support MIPS at all. In light of the <a href="https://github.com/android-ndk/ndk/wiki/Changelog-r17" target="_blank" rel="noopener">removal of MIPS support in NDK</a> as well, I can assume that the entire AOSP will say goodbye to MIPS at some point.</p><p>But not all components rely on <code>libunwind</code>. With some minor efforts and investigations, we can now enable some of them to build on every architecture that Debian supports. For now they include:</p><ul><li><a href="https://packages.debian.org/unstable/android-sdk-libsparse-utils" target="_blank" rel="noopener"><code>android-sdk-libsparse-utils</code></a></li><li><a href="https://packages.debian.org/unstable/hprof-conv" target="_blank" rel="noopener"><code>hprof-conv</code></a></li></ul><p>There will surely be more on the road, stay tuned.</p><h3 id="DD-Application-Approved"><a href="#DD-Application-Approved" class="headerlink" title="DD Application Approved"></a>DD Application Approved</h3><p>For those who aren‚Äôt familiar with the term, DD means Debian Developer who are official member of the Debian Project and usually have access and permissions to most parts of Debian‚Äôs infrastructure.</p><p>As a Debian Maintainer (DM), I can ask for upload permission on any packages and upload them without needing a sponsor. But in case of introducing new binary packages or hijacking ones from another source package I will need a sponsor. I believe with a DD account working in Debian will become smoother and easier.</p><p>So I <a href="https://nm.debian.org/process/479" target="_blank" rel="noopener">applied</a> for DD about‚Ä¶ 6 months ago! After a marathon of Q&amp;A sessions I finally got approved by my AM Joerg Jaspert. Now I still have to wait for further review by the system, perhaps I can get the account in November.</p><p>Big thanks to Hans-Christoph Steiner, Markus Koschany and Emmanuel Bourg who advocated me, and my AM Joerg Jaspert.</p><h2 id="Voidbuilder-Release-0-2-0"><a href="#Voidbuilder-Release-0-2-0" class="headerlink" title="Voidbuilder Release 0.2.0"></a>Voidbuilder Release 0.2.0</h2><p><a href="https://www.npmjs.com/package/voidbuilder" target="_blank" rel="noopener">Voidbuilder</a> is a simple program that mimics <a href="https://packages.debian.org/sid/pbuilder" target="_blank" rel="noopener"><code>pbuilder</code></a> but uses <a href="https://docker.com" target="_blank" rel="noopener">Docker</a> as the isolation engine. I have been using it privately and am quite satisfied.</p><p>Last month I released a 0.2.0 version with the following changes:</p><ul><li>The <code>login</code> sub-command no longer builds the source-only bundle and this task must be done by the user.</li><li>One failed hook no longer fail the entire job, instead a message will pop up.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome readers, this is a infrequently updated post series that logs my activities within open-source communities. I want my work to be 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from April to August 2018</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-April-to-August-2018.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-April-to-August-2018.html</id>
    <published>2018-09-23T20:27:52.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome readers, this is a infrequently updated post series that logs my activities within open-source communities. I want my work to be as transparent as possible in order to promote open governance, a policy feared even by some ‚Äúmighty‚Äù nations.</p><p>I do not work on open-source full-time, although I sincerely would love to. Therefore the posts may cover a ridiculously long period (even a whole year).</p><h2 id="A-Revamped-Blog-Site"><a href="#A-Revamped-Blog-Site" class="headerlink" title="A Revamped Blog Site"></a>A Revamped Blog Site</h2><p>This website is now using a new theme called <a href="https://github.com/jekyll/minima" target="_blank" rel="noopener">Minima</a> from the <a href="https://jekyllrb.com" target="_blank" rel="noopener">Jekyll</a> developers. It‚Äôs a elegant and simplistic one featured in <a href="https://this-week-in-rust.org" target="_blank" rel="noopener">various</a> <a href="https://rustwasm.github.io" target="_blank" rel="noopener">blogs</a> involved in the Rust community. I am myself a huge fan of Rust, so I immediately had a crush on the theme. Although this idea already came out probably a year ago, the transition took so long because I didn‚Äôt have the time to focus on learning front-end technologies.</p><p>At first I thought I must implement the theme on my own as I would be using Hexo but it was for Jekyll, but turns out it was quite easy to forcibly apply it under a different static site generator. Now I‚Äôm pretty satisfied the outcome, though I am just clueless on how to make a good homepage, hence the one it has now.</p><h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><p>Debian is a general-purpose Linux distribution that is widely used on the planet. I am currently a Debian Maintainer who works on packages related to Android SDK and the Java ecosystem.</p><ul><li>Uploaded <a href="https://tracker.debian.org/news/958426/accepted-gradle-44-1-source-into-experimental" target="_blank" rel="noopener">Gradle 4.4</a> to <code>experimental</code>. I didn‚Äôt investigate how to make <code>gradle-debian-helper</code> compatible with the new release until Emmanuel Bourg did it. It‚Äôs now <a href="https://tracker.debian.org/news/987997/accepted-gradle-44-2-source-into-unstable" target="_blank" rel="noopener">in <code>unstable</code></a>.</li><li>Introduced new package <a href="https://packages.debian.org/sid/libdd-plist-java" target="_blank" rel="noopener"><code>dd-plist</code></a> which is needed by Gradle 4.4.</li><li>We‚Äôve started updating the Android SDK to Oreo<ul><li>Uploaded <a href="https://tracker.debian.org/news/979030/accepted-android-platform-external-boringssl-810r23-1-source-amd64-into-unstable-unstable" target="_blank" rel="noopener"><code>android-platform-external-boringssl</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/969349/accepted-android-platform-external-libselinux-810r23-1-source-amd64-into-experimental-experimental" target="_blank" rel="noopener"><code>android-platform-external-libselinux</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/959286/accepted-android-platform-external-libunwind-810r23-1-source-into-experimental" target="_blank" rel="noopener"><code>android-platform-external-libunwind</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/959450/accepted-android-platform-frameworks-native-1810r23-1-source-into-experimental" target="_blank" rel="noopener"><code>android-platform-frameworks-native</code></a></li><li>Uploaded <a href="https://tracker.debian.org/news/964503/accepted-android-platform-libcore-810r23-1-source-into-experimental" target="_blank" rel="noopener"><code>android-platform-libcore</code></a></li></ul></li></ul><h2 id="Voidbuilder-A-New-Builder-for-Debian"><a href="#Voidbuilder-A-New-Builder-for-Debian" class="headerlink" title="Voidbuilder: A New Builder for Debian"></a>Voidbuilder: A New Builder for Debian</h2><p>I have been writing a simple Node.js application called ‚ÄúVoidbuilder‚Äù which serves as an alternative to tools like <a href="https://packages.debian.org/unstable/pbuilder" target="_blank" rel="noopener"><code>pbuilder</code></a> or <a href="https://wiki.debian.org/sbuild" target="_blank" rel="noopener"><code>sbuild</code></a>. The main difference is that is replaces the <code>chroot</code> part of those tools with <a href="https://docker.com" target="_blank" rel="noopener">Docker</a>. It also comes with goodies like zero-configuration and the ability to start a container with all build-dependencies installed so you don‚Äôt need to contaminate your machine with tons of development packages just for working on a package.</p><p>Writing such admin/devel tools in JavaScript is an odd choice which few people would agree, I assume. My rationale includes that it‚Äôs much more powerful than shell scripts and has a richer ecosystem than Python. While I am satisfied with the coding experience, I am still annoyed that JavaScript lacks so many features that modern OOP languages have (e.g. enumerations, interfaces). Luckily, it only took me a few weeks to get the prototype running.</p><p>The code is hosted on <a href="https://salsa.debian.org/seamlik-guest/voidbuilder" target="_blank" rel="noopener">Salsa</a> and it will get a release on NPM soon after I implement the second feature I mentioned above.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome readers, this is a infrequently updated post series that logs my activities within open-source communities. I want my work to be 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from April 2017 to March 2018</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-April-2017-to-March-2018.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-April-2017-to-March-2018.html</id>
    <published>2018-04-14T05:00:38.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>Because of all the nonsense coming from my current school, I hadn‚Äôt been able to spend too much time on open source projects. As a result, this post sums up an entire year of activities after the previous one‚Ä¶ Surprised me a bit too. üò∞</p><h2 id="Personal-Projects"><a href="#Personal-Projects" class="headerlink" title="Personal Projects"></a>Personal Projects</h2><p>Created a <a href="https://gitlab.com/seamlik/utils" target="_blank" rel="noopener">repository in GitLab</a> to store some useful scripts and config files that makes up my development environment. It mostly focuses on Debian development, but will add more stuff in other area when the time has come.</p><p>The repository contains files that sets up <a href="https://wiki.debian.org/cowbuilder" target="_blank" rel="noopener"><code>cowbuilder</code></a> for all officially supported architectures in Debian, and some scripts to update the images, to build a package in all those architectures, and to build a long list of packages, all in parallel using a process pool. Very useful when you are testing reverse-build-dependencies.</p><h2 id="Introducing-maven-repo-helper-extras"><a href="#Introducing-maven-repo-helper-extras" class="headerlink" title="Introducing maven-repo-helper-extras"></a>Introducing <a href="https://salsa.debian.org/seamlik-guest/maven-repo-helper-extras" target="_blank" rel="noopener"><code>maven-repo-helper-extras</code></a></h2><p>I spent several weeks writing some additional tools for the existing <a href="https://tracker.debian.org/pkg/maven-repo-helper" target="_blank" rel="noopener"><code>maven-repo-helper</code></a>. The package now contains 2 tools:</p><ul><li><code>mh_shlibdeps</code>: Like <code>dh_shlibdeps</code> but for Maven artifacts, successor to <code>mh_resolve_dependencies</code></li><li><code>mh_genlauncher</code>: Generate simple launcher scripts for Java programs distributed as Maven artifacts.</li></ul><p>The package name is likely to be changed, and <code>mh_genlauncher</code> is likely to be replaced by something neater. Still waiting for other core devs in <code>pkg-java</code> team to review it.</p><h2 id="Other-Activities"><a href="#Other-Activities" class="headerlink" title="Other Activities"></a>Other Activities</h2><ul><li>Updated BND to <a href="https://tracker.debian.org/news/940380/accepted-bnd-350-1-source-into-unstable" target="_blank" rel="noopener">3.5.0</a>.<ul><li>Updated Maven Bundle Plugin to <a href="https://tracker.debian.org/news/942832/accepted-maven-bundle-plugin-350-1-source-into-unstable" target="_blank" rel="noopener">3.5.0</a>.</li><li>Updated OSGi Compendium to <a href="https://tracker.debian.org/news/939135/accepted-osgi-compendium-600-1-source-into-unstable" target="_blank" rel="noopener">6.0.0</a>.</li><li>Introduced <a href="https://tracker.debian.org/pkg/felix-resolver" target="_blank" rel="noopener">Felix Resolver</a></li></ul></li></ul><h2 id="Google-Summer-of-Code-2018"><a href="#Google-Summer-of-Code-2018" class="headerlink" title="Google Summer of Code 2018"></a>Google Summer of Code 2018</h2><p>I am now a mentor under Debian organization in GSoC 2018, guiding students to contribute to our Android SDK packages.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Because of all the nonsense coming from my current school, I hadn‚Äôt been able to spend too much time on open source projects. As a result
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>How to Contribute to Android SDK in Debian</title>
    <link href="https://seamlik.github.io/blog/posts/How-to-Contribute-to-Android-SDK-in-Debian.html"/>
    <id>https://seamlik.github.io/blog/posts/How-to-Contribute-to-Android-SDK-in-Debian.html</id>
    <published>2017-09-10T08:42:09.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p><strong>A bit of background</strong>: This article was written to provide freshman guide for students who was applying for the <a href="https://wiki.debian.org/Outreachy/Round15/Projects#Outreachy.2FRound15.2FProjects.2FAndroidSDKToolsInDebian.Android_SDK_Tools_in_Debian" target="_blank" rel="noopener">‚ÄúAndroid SDK Tools in Debian‚Äù project</a> in <a href="https://outreachy.org" target="_blank" rel="noopener">Outreachy</a>.</p><p>Android SDK is available <a href="https://packages.debian.org/source/sid/android-sdk-meta" target="_blank" rel="noopener">in Debian</a>. With these tools, Android developers are able to build their apps with pure open source software that has neither limitation on usage nor probable scary backdoors. However the packages are usually out-of-date and do not cover all components of the SDK due to the huge size of AOSP and a lack manpower. If you are interested in help us, you may find this article helpful.</p><p>This isn‚Äôt a detailed tutorial. Instead, it‚Äôs a guide for you to know about the overall workflow and where to start.</p><h2 id="Where-to-Find-Us"><a href="#Where-to-Find-Us" class="headerlink" title="Where to Find Us"></a>Where to Find Us</h2><p>You can find some information about the team <a href="https://wiki.debian.org/Teams/AndroidTools" target="_blank" rel="noopener">here</a>. IRC and mailing list are how we communicate mostly.</p><h3 id="IRC"><a href="#IRC" class="headerlink" title="IRC"></a>IRC</h3><p>IRC is a kind of anonymous group chat technology invented a great many years ago. It is the preferred way of meeting for surprisingly most of the open source projects in the world. In order to join an IRC channel, use any IRC client (e.g. <a href="https://wiki.gnome.org/Apps/Polari" target="_blank" rel="noopener">Polaris</a> and <a href="https://irccloud.com" target="_blank" rel="noopener">IRCCloud</a>) to login an IRC server, choose a nickname, then you can enter a channel you find interested.</p><p>Debian has an official IRC server (which is actually <a href="https://oftc.net" target="_blank" rel="noopener">OFTC</a>): <code>irc.debian.org</code>. You can find us in the <code>#debian-mobile</code> and <code>#debian-android-tools</code> channels. We usually talk in the first one and check out Git repository notifications in the second one. My nickname is <code>seamlik</code>, and <code>_hc</code> is the team founder.</p><h3 id="Mailing-list"><a href="#Mailing-list" class="headerlink" title="Mailing list"></a>Mailing list</h3><p>In case you don‚Äôt already know what an mailing list is, imagine it‚Äôs also a group chat platform but for emails. Any email address that subscribe to the list address will receive all emails sent to the list address. Our team also has a mailing list where we make announcements and discussions that we prefer to be publicly recorded. Visit the <a href="https://lists.alioth.debian.org/cgi-bin/mailman/listinfo/android-tools-devel" target="_blank" rel="noopener">mailing list webpage</a> to subscribe to it.</p><h3 id="Git-Repositories"><a href="#Git-Repositories" class="headerlink" title="Git Repositories"></a>Git Repositories</h3><p>We host all our code on Debian‚Äôs infrastructure (<a href="https://anonscm.debian.org/cgit/android-tools" target="_blank" rel="noopener">Alioth</a>, though it is <a href="https://wiki.debian.org/Alioth/GitNext" target="_blank" rel="noopener">being replaced</a> at the time). There are also <a href="https://github.com/debian-pkg-android-tools" target="_blank" rel="noopener">mirrors</a> on GitHub, though we do not accept pull request there because that would be beyond Debian‚Äôs workflow.</p><h2 id="Learn-to-Maintain-Debian-Packages"><a href="#Learn-to-Maintain-Debian-Packages" class="headerlink" title="Learn to Maintain Debian Packages"></a>Learn to Maintain Debian Packages</h2><p>The <code>android-tools</code> team (our team üòâ) is a packaging team in Debian, which means we maintain packages of a specific topic (in this case, Android). In order to contribute to the effort, you first need to learn to maintain Debian packages. There are already a number of tutorials out there, e.g. ‚Äú<a href="https://www.debian.org/doc/manuals/maint-guide" target="_blank" rel="noopener">Debian New Maintainers‚Äô Guide</a>‚Äú, ‚Äú<a href="https://www.debian.org/doc/manuals/debmake-doc/index.html" target="_blank" rel="noopener">Guide for Debian Maintainers</a>‚Äú and ‚Äú<a href="http://packaging.ubuntu.com/html" target="_blank" rel="noopener">Ubuntu Packaging Guide</a>‚Äú.</p><p>Once you know how to write build scripts for Debian packages, you may try updating existing packages or make new ones and then look for a Debian member to sponsor it (upload it for you). For packages without a team, you need to file a ‚Äúsponsorship request‚Äù <a href="https://mentors.debian.net" target="_blank" rel="noopener">here</a>. But since Android SDK packages are maintained by our team, you should directly ask us to do the sponsoring.</p><h2 id="An-Overview-of-Our-Packages"><a href="#An-Overview-of-Our-Packages" class="headerlink" title="An Overview of Our Packages"></a>An Overview of Our Packages</h2><p>The entire source code of the SDK is part of AOSP and we basically fetch the source code from it and build the toolset using handwritten <code>Makefiles</code>. Since AOSP is a gigantic project with the size of 200+ GiB, it is improper and maybe impossible to make it as a single source package in Debian. We therefore consider a single Git repository of AOSP as the basic unit of one source package in Debian and clarify the relationship to the AOSP repository in the source package name. Take <a href="https://packages.debian.org/source/unstable/android-platform-system-core" target="_blank" rel="noopener"><code>android-platform-system-core</code></a> for example, its source code corresponds to <a href="https://android.googlesource.com/platform/system/core" target="_blank" rel="noopener"><code>platform/system/core</code></a>.</p><p>The work needed to be done includes updating all packages to the latest Android release, packaging missing parts of the SDK and improve the <a href="https://packages.debian.org/sid/android-sdk-helper" target="_blank" rel="noopener">helper tools</a> that build Android apps on Debian. These are the top priorities.</p><p>You can find more thorough information at the <a href="https://wiki.debian.org/AndroidTools" target="_blank" rel="noopener">wiki page</a>.</p><h2 id="Spread-the-Word"><a href="#Spread-the-Word" class="headerlink" title="Spread the Word!"></a>Spread the Word!</h2><p>If you find Android SDK in Debian useful to your projects or your company, please provide us feedback. But it would be awesome if you start to help us with the packages! Do share the project with your friends and colleagues, so that we get more users and help!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;A bit of background&lt;/strong&gt;: This article was written to provide freshman guide for students who was applying for the &lt;a href=&quot;h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from February to March 2017</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-February-to-March-2017.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-February-to-March-2017.html</id>
    <published>2017-04-17T15:48:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>After I started focusing my energy on my <a href="https://viska.chat" target="_blank" rel="noopener">capstone project</a>, fewer and fewer contents will be present in the subsequent posts.</p><h2 id="Android-SDK-in-Debian"><a href="#Android-SDK-in-Debian" class="headerlink" title="Android SDK in Debian"></a>Android SDK in Debian</h2><p>Now that a large portion of the Android SDK are already settled down inside Debian, we need to help Debian users make use of our them without breaking too many things. Hence, I hacked the Gradle Android Plugin in Debian a bit so that when it detects that Debian‚Äôs Android SDK is being used, it does the following:</p><ul><li>Auto-select the latest <a href="https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.BaseExtension.html#com.android.build.gradle.BaseExtension:buildToolsVersion" target="_blank" rel="noopener"><code>buildToolsVersion</code></a> installed in the system instead of downloading the specified version from internet.</li><li>Auto-select the best <a href="https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.BaseExtension.html#com.android.build.gradle.BaseExtension:compileSdkVersion" target="_blank" rel="noopener"><code>compileSdkVersion</code></a> installed in the system. If <code>23</code> was specified, it searches for <code>android-23</code>. If <code>android-23</code> is not installed, it searches for the oldest API level that is later than 23. If it misses again, an error is thrown.</li></ul><p>Right now this approach would make the compiled APKs unreproducible because AAPT carves <code>compileSdkVersion</code> into the <code>AndroidManifest.xml</code> in an APK. This is tricky because we only have packaged <a href="https://packages.debian.org/unstable/android-sdk-platform-23" target="_blank" rel="noopener"><code>android-23</code></a> and it is quite difficult to package any older <code>android.jar</code> due to that <a href="https://packages.debian.org/unstable/doclava-aosp" target="_blank" rel="noopener">Doclava</a> is <a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2017q1/002519.html" target="_blank" rel="noopener">highly unstable and bugful</a>.</p><p>Besides the Gradle plugin we also wrote a Gradle init script that forces the build script of an Android application project to use the Gradle Android Plugin in Debian. The script is provided by <a href="https://packages.debian.org/unstable/android-sdk-helper" target="_blank" rel="noopener"><code>android-sdk-helper</code></a>.</p><p>You can find more information in a <a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2017q1/002570.html" target="_blank" rel="noopener">mailing list post</a> and <a href="https://bits.debian.org/2017/03/build-android-apps-with-debian.html" target="_blank" rel="noopener">a post of Bits from Debian</a>.</p><h2 id="Other-Debian-Activities"><a href="#Other-Debian-Activities" class="headerlink" title="Other Debian Activities"></a>Other Debian Activities</h2><ul><li>Packaged <a href="https://tracker.debian.org/pkg/libscout" target="_blank" rel="noopener"><code>libscout</code></a>, a command line tool for scanning third party libraries used by an APK. Used already by F-Droid.</li><li>Packaged <a href="https://tracker.debian.org/pkg/libsmali-1-java" target="_blank" rel="noopener"><code>libsmali-1-java</code></a> for <code>libscout</code>.</li><li>Packaged <a href="https://tracker.debian.org/pkg/wala" target="_blank" rel="noopener"><code>wala</code></a> which would be used by Jack. But following the <a href="https://android-developers.googleblog.com/2017/03/future-of-java-8-language-feature.html" target="_blank" rel="noopener">deprecation of Jack</a>, I can stop chasing it now.</li></ul><h2 id="Viska"><a href="#Viska" class="headerlink" title="Viska"></a>Viska</h2><p>My capstone project Viska is an Android XMPP client with VoIP, and WebRTC became my first choice because of its ever trend. Turns out the reference implementation (by Google) has built-in support for Android and the codebase is huge and not fast to compile (just like Google‚Äôs other products), I opened up a <a href="https://gitlab.com/seamlik/prebuilts-webrtc-android" target="_blank" rel="noopener">repository on GitLab</a> providing prebuilt binaries including Javadoc of the WebRTC SDK for Android.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;After I started focusing my energy on my &lt;a href=&quot;https://viska.chat&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;capstone project&lt;/a&gt;, fewer and fewe
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from December 2016 to January 2017</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-December-2016-to-January-2017.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-December-2016-to-January-2017.html</id>
    <published>2017-02-26T08:22:35.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>I am such a lazy person that this post should have shown up a year ago‚Ä¶ ü§ß</p><h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><p>As my <a href="/post/my-open-source-activities-in-september-2016">previous post</a> suggested, The Android SDK for Nougat is coming to Debian, and we did it. As of today, all SDK packages except for the target framework (<code>android.jar</code>) are updated to 7.0.0_r1, all of which have X86, ARM &amp; MIPS builds. There is no plan to update them to 7.1.1 yet, though an <code>android-sdk-platform-25</code> will someday be done.</p><p>Other notable activities include:</p><ul><li>Uploaded a new package <a href="https://tracker.debian.org/pkg/android-platform-tools-analytics-library" target="_blank" rel="noopener"><code>android-platform-tools-analytics-library</code></a>.</li><li>Updated <a href="https://tracker.debian.org/pkg/android-platform-tools-base" target="_blank" rel="noopener"><code>android-platform-tools-base</code></a> to 2.2.2. This package provides the ofiicial Gradle plugin for building Android apps.</li></ul><p>Honestly, updating the Gradle plugin was a messy task because it introduces several big dependencies including the core library of IntelliJ IDEA! Since at that time Debian has entered soft freeze, which means no new packages will be accepted automatically into Stretch, we had to bundle those third party sources into this package. Someday I‚Äôm gonna split them into separated packages, otherwise it will be very ugly.</p><p>Maybe I‚Äôll be the first warrior to package IntelliJ IDEA? ü§î Hmm it‚Äôs getting more and more scary. ü§ß</p><h2 id="Other-Projects"><a href="#Other-Projects" class="headerlink" title="Other Projects"></a>Other Projects</h2><p>In January, I started a <a href="https://github.com/seamlik/pom2classpath" target="_blank" rel="noopener">small project called ‚Äúpom2classpath‚Äù</a> which generates a Class-Path list for a given Maven POM by scanning given Maven repositories. This may not sound attractive by typical Java software dstributor, but it greatly benefit Debian‚Äôs Java packaging. Once you get the Class-Path, you can scan for the dependencies of a Debian package which largely automates the work of packaging a large Java package. So far, you need to manually summarize what package should be put in <code>d/control</code> when you are packaging a Gradle project, which is error-prone and a waste of time and energy.</p><p>Additionally, you can even simply write an extremelt minimalist launcher script when packaging a Java executable program without storing the Class-Path in the JARs. There has to be just one line in this launcher script: <code>pom2classpath /usr/share/maven-repo/com/foo/1.0/foo-1.0.pom</code>. Cool! üòé</p><p>After some testings I‚Äôll put it in Debian and start hacking maven-repo-helper so that it generates dependencies to <code>substvars</code> files.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I am such a lazy person that this post should have shown up a year ago‚Ä¶ ü§ß&lt;/p&gt;
&lt;h2 id=&quot;Debian&quot;&gt;&lt;a href=&quot;#Debian&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities from October to November 2016</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-October-to-November-2016.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-October-to-November-2016.html</id>
    <published>2016-12-01T06:39:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>I did not finish too many significant jobs in the last 2 months, so I am combining them into one post. So far I still only work in Debian, but my (would-be) personal open source project <a href="https://github.com/seamlik/viska-android" target="_blank" rel="noopener">Viska</a> has started its conceptional stage, although there is not much effort spent in it yet.</p><h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h2><ul><li>Updated <a href="https://tracker.debian.org/news/802302" target="_blank" rel="noopener"><code>android-platform-external-libunwind</code></a> so that <code>android-platform-frameworks-base</code> can build against it.</li><li>Uploaded <a href="https://tracker.debian.org/news/814300" target="_blank" rel="noopener"><code>android-platform-tools-swt</code></a> which provides various graphical tools in Android SDK using SWT.</li><li>Uploaded <a href="https://tracker.debian.org/news/814301" target="_blank" rel="noopener"><code>android-framework-23</code></a> which provides the Android SDK Platform for API Level 23.</li><li>Released <a href="https://tracker.debian.org/news/808921" target="_blank" rel="noopener"><code>gradle-debian-helper</code> 1.4</a> with new features:<ul><li>A task of genetating Maven POMs for being used by <code>maven-repo-helper</code></li><li>Let <code>javadoc</code> link to the local Javadoc of <code>default-jdk</code></li></ul></li><li>Updated <code>libnative-platform-java</code> to <a href="https://tracker.debian.org/news/812120" target="_blank" rel="noopener">0.11</a></li><li>Updated <code>gradle</code> to <a href="https://tracker.debian.org/news/814966" target="_blank" rel="noopener">3.1</a>. Also updated the following packages in order to be compatible with Gradle 3.x:<ul><li><a href="https://tracker.debian.org/news/820417" target="_blank" rel="noopener"><code>android-platform-tools-base</code></a></li><li><a href="https://tracker.debian.org/news/814980" target="_blank" rel="noopener"><code>bnd</code></a></li><li><a href="https://tracker.debian.org/news/814978" target="_blank" rel="noopener"><code>gant</code></a></li><li><a href="https://tracker.debian.org/news/815030" target="_blank" rel="noopener"><code>groovy</code></a></li><li><a href="https://tracker.debian.org/news/815035" target="_blank" rel="noopener"><code>libgpars-groovy-java</code></a></li></ul></li><li>Uploaded a new package <code>uncommons-watchmaker</code></li><li>Updated <a href="https://tracker.debian.org/news/820274" target="_blank" rel="noopener"><code>android-sdk-meta</code></a> which now no longer installs symlinks to any shared libraries.</li></ul><h2 id="Plans-for-the-Next-Months"><a href="#Plans-for-the-Next-Months" class="headerlink" title="Plans for the Next Months"></a>Plans for the Next Months</h2><p>Debian Stretch is coming soon as the transition freeze has passed and the soft freeze is coming in January. Therefore, I don‚Äôt think there is enough time for the Nougat SDK getting into Stretch, since there‚Äôs <a href="https://ftp-master.debian.org/new/android-platform-libcore_7.0.0+r1-3.html" target="_blank" rel="noopener">one package</a> being waiting in the NEW queue for over a month! Without it being accepted we can‚Äôt step forward, so let‚Äôs hope the SDK is better shaped in Debian Buster. Sorry about that, we can‚Äôt do anything to accelerate the NEW queue. üòì</p><p>Anyway, forget about the techs, let‚Äôs listen to some music! This December, I will be playing cello in <a href="https://www.facebook.com/events/1903887319840873" target="_blank" rel="noopener">a small concert</a> held in Taichung featuring Star Wars and some songs arranged by <a href="http://www.alanensemble.com/pages/ResumeAlan.html" target="_blank" rel="noopener">Mr. Alan MacDonald</a>. If you live in Taichung, a nice city in Taiwan, please come!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I did not finish too many significant jobs in the last 2 months, so I am combining them into one post. So far I still only work in Debian
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>My Open-Source Activities in September 2016</title>
    <link href="https://seamlik.github.io/blog/posts/Activities-September-2016.html"/>
    <id>https://seamlik.github.io/blog/posts/Activities-September-2016.html</id>
    <published>2016-10-02T02:42:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p>Finally I decided to mark down my activities in open source communities every several months.</p><p>I‚Äôve been maintaining a blog of my own but actually I just put it at the corner and let it get dusty, which was not my intention in the first place. I always felt that there‚Äôs not much to write down, well, which was also not right. Writing articles about my work may not interest most random people, but at least it can be considered being responsible of my actions in open source communities.</p><p>The following is the brief notes of my open source activities in September 2016:</p><h2 id="Applied-for-Debian-Maintainer"><a href="#Applied-for-Debian-Maintainer" class="headerlink" title="Applied for Debian Maintainer"></a>Applied for Debian Maintainer</h2><p>I‚Äôve spent about a year in contributing to Debian, all began in Google Summer of Code 2015 when I was working on <a href="https://wiki.debian.org/SummerOfCode2015/StudentApplications/KaichungYan" target="_blank" rel="noopener">packaging Android SDK in Debian</a>. After that I kept working on the project, but most of the time I need to file a Request for Sponsor (RFS) for asking a Debian Developer for reviewing on my packages. <a href="https://wiki.debian.org/HansChristophSteiner" target="_blank" rel="noopener">Hans-Christoph Steiner</a>, Markus Koschany and Emmanuel Bourg did most of the review for me. Now that I am familiar with packaging, I should be qualified to apply for a DM identity. Being a DM, I can gain upload permissions to my own packages, which will ease the maintenance. According the <a href="https://nm.debian.org/process/83" target="_blank" rel="noopener">application</a>, I have been approved (üéâüéä) but not officially a DM. Thanks to Debian Developer nthykier who told me on IRC that my key is waiting for being synced to the official keyring, which will probably happen in October.</p><p>Thanks for the advocations from Hans-Christoph Steiner, Markus Koschany and Emmanuel Bourg!</p><h2 id="Started-Updating-Android-Packages-to-Nougat"><a href="#Started-Updating-Android-Packages-to-Nougat" class="headerlink" title="Started Updating Android Packages to Nougat"></a>Started Updating Android Packages to Nougat</h2><p>With the exciting release of Android 7 Nougat comes the beginning of the CyanogenMod developers‚Äô busy period, as well as Debian‚Äôs android-tools team‚Äôs. One of our teammates Chirayu Desai notified us someday that the source code of Android N is released, after which I summarized some of my <a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001740.html" target="_blank" rel="noopener">ideas and plan</a> on the mailing list. There will be several changes for the Nougat update:</p><ul><li><strong>ARM &amp; MIPS builds are brought back.</strong> Actually they were there before I rid them out. üòì We decided to maintain x86 binaries only because Google only supports and releases Android SDK in x86. Now I know how to setup an environment of other architectures as well as how to build packages for these architectures, it would be great to support them again. Plus the Debian Lava team seemed to care about ADB on ARM64 by complaining on the <a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=817" target="_blank" rel="noopener">removal bug</a>. Good news is that Chirayu Desai is also willing to help me in these architectures since he does not use any x86 machines. üòÇ</li><li><strong><code>AndroidConfig.h</code> are üî•.</strong> <a href="https://android.googlesource.com/platform/build/+/android-6.0.1_r68/core/combo/include/arch" target="_blank" rel="noopener">These header files</a> contains macros dealing with architecture details and must be included in all C/C++ binaries in AOSP. Since Nougat, the AOSP team removed the header files and we are able remove the use of <a href="https://wiki.debian.org/BuildProfileSpec" target="_blank" rel="noopener">build profiles</a> in <a href="https://tracker.debian.org/pkg/android-platform-build" target="_blank" rel="noopener"><code>android-platform-build</code></a>.</li><li><strong><a href="https://tracker.debian.org/pkg/android-platform-system-tools-aidl" target="_blank" rel="noopener"><code>aidl</code></a> is now a separated package.</strong> It was previously a package in <a href="https://android.googlesource.com/platform/frameworks/base/+/android-6.0.1_r68/tools/aidl" target="_blank" rel="noopener"><code>android-platform-frameworks-base</code></a>. I really don‚Äôt like the AOSP team moving stuff around. They have a gigantic project tree to play with but we don‚Äôt!</li></ul><p>In this month I have prepared updates for the following packages:</p><ul><li><a href="https://tracker.debian.org/pkg/android-platform-external-doclava" target="_blank" rel="noopener"><code>android-platform-external-doclava</code></a> (not yet uploaded)</li><li><a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001873.html" target="_blank" rel="noopener"><code>android-platform-external-libselinux</code></a></li><li><a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001883.html" target="_blank" rel="noopener"><code>android-platform-external-libunwind</code></a></li><li><a href="https://tracker.debian.org/news/799608" target="_blank" rel="noopener"><code>android-platform-frameworks-native</code></a></li><li><a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001889.html" target="_blank" rel="noopener"><code>android-platform-libcore</code></a></li><li><a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001896.html" target="_blank" rel="noopener"><code>android-platform-system-core</code></a></li><li><a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001914.html" target="_blank" rel="noopener"><code>android-platform-system-extras</code></a></li><li><a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001929.html" target="_blank" rel="noopener"><code>android-platform-system-tools-aidl</code></a></li></ul><p>For the moment they are being uploaded to the experimental distribution. After all of the existing packages are updated to 7.0.0+r1, we will upload all of them to Unstable.</p><h2 id="Hacking-gradle-debian-helper-So-That-It-Auto-generates-Maven-POMs"><a href="#Hacking-gradle-debian-helper-So-That-It-Auto-generates-Maven-POMs" class="headerlink" title="Hacking gradle-debian-helper So That It Auto-generates Maven POMs"></a>Hacking <code>gradle-debian-helper</code> So That It Auto-generates Maven POMs</h2><p>Every Debian packages providing Java libraries should install Maven POMs into <code>/usr/share/maven-repo</code> which serve as the metadata. Without these metadata, these libraries would be uneasy to be used by other Java packages. Gradle projects do not have Maven POMs, so the package maintainers need to write custom rules to generate them.</p><p>Most of the Android packages are built with Gradle and <code>gradle-debian-helper</code>, and I need to provide the same scripts for them in order to generate the Maven POMs. Weeks ago I noticed that almost all Android packages containing Java libraries are unreproducible because the order of the dependencies in the Maven POMs are unsorted and random, and I had to modify every one of those packages to sort the dependencies. If the Maven POM generation was done by <code>gradle-debian-helper</code>, my life could have been better.</p><p>The feature is being developed at <a href="https://github.com/seamlik/gradle-debian-helper/tree/debian-pom-generation" target="_blank" rel="noopener">GitHub</a>. The obstacle I met so far is that it is tricky when you are writing Gradle plugins in Java and you need to access the third-party classes used by Gradle classes. The compiler complained that I must not convert <code>org.apache.maven.model.Dependency</code> to <code>org.apache.maven.model.Dependency</code>, which sounded nonsense. My first guess was that the build script (<code>pom.xml</code>) of gradle-debian-helper links to the JARs in <code>/usr/share/java</code> instead of POMs in <code>/usr/share/maven-repo</code>. I modified the build script so that it links to POMs in <code>/usr/share/maven-repo</code> but it just failed to load <code>pmaven-debian.pom</code>. I‚Äôve reported this <a href="https://bugs.debian.org/837882" target="_blank" rel="noopener">bug</a>.</p><h2 id="Other-Activities"><a href="#Other-Activities" class="headerlink" title="Other Activities"></a>Other Activities</h2><ul><li><strong>Fix Gradle‚Äôs failure to launch.</strong> Previously, Gradle still harcoded the JAR versions in its classpath, and a new upstream release of JSch <a href="https://bugs.debian.org/836391" target="_blank" rel="noopener">broke Gradle entirely</a>. I modified the build scripts of Gradle so that it used a versionless classpath without manually removing the dependency declarations. The tricky part is that Gradle builds using itself, so even now we‚Äôve fixed the Gradle in Debian, the new release of Gradle in Ubuntu still <a href="https://bugs.launchpad.net/ubuntu/+source/gradle/+bug/1622550" target="_blank" rel="noopener">FTBFS</a>. I asked on the IRC and was told that I need to contact the Ubuntu archive managers and ask them to rebootstrap the package, which I did afterwards and <a href="https://launchpad.net/~cjwatson" target="_blank" rel="noopener">Colin Watson</a> helped. Thank you!</li><li><strong>Polished the packaging of Gradle.</strong> This includes dropping the generation of classpaths in the JAR manifest (otherwise JVM loads 2 sets of the same JARs) and making the generated Maven POMs reproducible.</li><li><strong>Prepared updates for several packages</strong> including <a href="https://lists.alioth.debian.org/pipermail/android-tools-devel/2016q3/001749.html" target="_blank" rel="noopener">android-platform-frameworks-native/6.0.1+r55-1</a>.</li><li><strong>Reported a <a href="https://bugs.debian.org/837873" target="_blank" rel="noopener">wishlist bug</a></strong> that <code>src:p7zip</code> should provide developemnt packages for <code>lib7z.so</code>.</li><li><strong>Reported bugs about <a href="https://bugs.debian.org/838033" target="_blank" rel="noopener"><code>src:closure-compiler</code></a> and <a href="https://bugs.debian.org/838034" target="_blank" rel="noopener"><code>src:zabbix</code></a> who should switch to <a href="https://packages.debian.org/libandroid-json-java" target="_blank" rel="noopener"><code>libandroid-json-java</code></a> from dusty <a href="https://packages.debian.org/libandroid-json-java" target="_blank" rel="noopener"><code>libandroid-json-org-java</code></a>.</strong> Turns out that the JSON library in AOSP is used by external projects, although I wonder why somebody would reply on a library without any API stability or version information. Anyway, it is used by packages in Debian, which was why I built this library in <a href="https://tracker.debian.org/pkg/android-platform-libcore" target="_blank" rel="noopener"><code>src:android-platform-libcore</code></a> in the first place.</li><li><strong>Reported a bug about <code>qemubuilder</code></strong> failing on creating images for <a href="https://bugs.debian.org/838753" target="_blank" rel="noopener"><code>arm64</code></a></li><li><strong>Manually closed <a href="https://bugs.debian.org/816083" target="_blank" rel="noopener">the bug</a></strong> about an auto-transition of <code>android-platform-build</code> which is long ended.</li></ul><h2 id="Plans-for-the-Next-Months"><a href="#Plans-for-the-Next-Months" class="headerlink" title="Plans for the Next Months"></a>Plans for the Next Months</h2><ul><li>Update <a href="https://tracker.debian.org/pkg/gradle" target="_blank" rel="noopener">Gradle</a> to 3.1.</li><li>Finish the update of all Android packages to Nougat.</li><li>Fix and upload <a href="https://anonscm.debian.org/cgit/android-tools/android-framework-23.git" target="_blank" rel="noopener">android-framework-23</a>, the last missing piece of a usable SDK.</li></ul><p>Hope I can also manage to pass my exams after all these. üôÑ</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Finally I decided to mark down my activities in open source communities every several months.&lt;/p&gt;
&lt;p&gt;I‚Äôve been maintaining a blog of my o
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Attending FOSDEM 2016: First Touch in Open Source Community</title>
    <link href="https://seamlik.github.io/blog/posts/Attending-Fosdem-2016.html"/>
    <id>https://seamlik.github.io/blog/posts/Attending-Fosdem-2016.html</id>
    <published>2016-03-04T06:51:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/assets/fosdem-classroom.jpg" alt=""></p><p>FOSDEM 2016 happened at the end of January, but I have been too busy to write my first trip to an open source event.</p><p>FOSDEM takes place in Belgium, which is almost ten thousand kilometers from my home. Luckily, Google kindly offered sponsorship for traveling to Belgium and lodging places for former GSoC mentors and students in Debian, which made my travel possible without giving my dad headaches. Thank you Google!</p><p>Open source meetings are really fun. Imagine you have been working hard on an exciting project with several colleagues around the world who have never met you, and now you have a chance to meet them and make friends with them, cool! However I am not involved with any project too deeply, so I don‚Äôt have too much expectations on this. But I‚Äôm still excited when I first saw my mentor Hans-Christoph Steiner! Pity that we forgot to take a picture, as I‚Äôm not those kind of people who like to take selfies every day.</p><p>One of the most interesting projects I saw during FOSDEM is <a href="https://ring.cx" target="_blank" rel="noopener">Ring</a>. Ring is a distributed communication software without central servers. All Ring clients in the world are connected to several others and find a particular user using a distributed hashtable. A Ring client is a key pair, whose public key serves as the ID. Thus, Ring is anti-censorshiping, anti-eavesdropping, which is great for China citizens and feared by the China government. After I got home I knew another similar but older project <a href="https://tox.chat" target="_blank" rel="noopener">Tox</a>, which seems to more feature-rich than Ring but still not sufficient for promoting it. There‚Äôs a huge disadvantage of both project, which is high battery drainage on Android. Hope someday they will improve it.</p><p>At the end of FOSDEM I joined the volunteers to do the clean up. We cleaned all the buildings, restored the rooms and finally shared the dinner at the hall of K Building. I‚Äôm not a European so I didn‚Äôt talk too much to them, but this is really an unforgettable experience. Hope I can join the next FOSDEM soon.</p><p><img src="/assets/fosdem-hall-crowd.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/assets/fosdem-classroom.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;FOSDEM 2016 happened at the end of January, but I have been too busy to write my f
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>What If XcodeGhost Hits Android...</title>
    <link href="https://seamlik.github.io/blog/posts/What-If-XCodeGhost-Hits-Android.html"/>
    <id>https://seamlik.github.io/blog/posts/What-If-XCodeGhost-Hits-Android.html</id>
    <published>2015-12-10T03:40:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://www.lo4d.com/i/award/Android%20SDK.png" alt=""></p><p>XcodeGhost broke out some time ago, but I didn‚Äôt know about this because I don‚Äôt use any Apple products until an email by one of my colleagues from Debian drew my attention.</p><p>Let me briefly describe the event of XcodeGhost outbreak. Because of China Communist Party‚Äôs Great Firewall, iOS developers in China are not easily to or even not able to download Xcode from official locations, they therefore find other ways like downloading it from messed up places like Baidu cloud drive, which unfortunately contained XcodeGhost virus and could build affected Apps. As a result, most affected Apps are from China.</p><p>I can‚Äôt stop thinking of such security event will happen to Android. Everything of Google is banned in China nowadays, Android developers in China also obviously can‚Äôt download Android SDK from official locations, and I don‚Äôt believe all of them are willing to pay for a stable VPN, not to mention the government claims to disable all VPNs. So it‚Äôs imaginable that some day there will be a similar virus outbreak caused by affected Android SDK.</p><p>I think I will have to share the responsibility if this day has come. I‚Äôm a member of Debian Android Tools team, working on getting Android SDK into Debian. Although we are currently still in a initial stage, once we finish our work Android developers using Debian or Ubuntu will be able to safely and conveniently get official Android SDK from official software repositories which are not censored in China. However since I usually lack of spare time, we are still stuck at the discussion with f2fs-tools developers, thus we can‚Äôt even finish adb and fastboot yet. If XcodeGhost-like virus happens to Android, it‚Äôs my laziness that prevent us from stopping it.</p><p>We‚Äôve submitted patches to f2fs-tools team, and one of our core members discussed in the email mentioned at the beginning about letting our nonfree packages download Android SDK files from China‚Äôs mirror if it can‚Äôt access Google. I hope we can finish our job as soon as possible.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://www.lo4d.com/i/award/Android%20SDK.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;XcodeGhost broke out some time ago, but I didn‚Äôt know about this 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Introducing Gradle 1.12 in Debian</title>
    <link href="https://seamlik.github.io/blog/posts/Gradle-1-12-Debian.html"/>
    <id>https://seamlik.github.io/blog/posts/Gradle-1-12-Debian.html</id>
    <published>2015-06-28T21:41:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://gradle.wpengine.netdna-cdn.com/wp-content/uploads/2015/06/gradlephant-291x300.png" alt=""></p><p>After 5 weeks of work, my colleague Komal Sukhani and I succeeded in bringing Gradle 1.12 with other packages into Debian. Here is a brief note of what we‚Äôve done:</p><ul><li>Gradle updated to <a href="https://packages.debian.org/source/experimental/gradle" target="_blank" rel="noopener">gradle_1.12-1</a></li><li>Groovy updated to <a href="https://packages.debian.org/source/experimental/groovy2" target="_blank" rel="noopener">groovy2_2.4.3+dfsg-1</a></li><li>native-platform updated to <a href="https://packages.debian.org/source/sid/libnative-platform-java" target="_blank" rel="noopener">libnative-platform-java_0.10+dfsg-1</a></li><li>New package: <a href="https://packages.debian.org/source/sid/bintray-client-java" target="_blank" rel="noopener">bintray-client-java_0.8.1-1</a></li></ul><p>Note that both Gradle and Groovy are in experimental distribution because Groovy build-depends on Gradle, and Gradle build-depends on bnd 2.1.0, which is in experimental as well.</p><p>Updating these packages takes us an entire month because my summer vacation had not come yet until the day we uploaded Gradle and Groovy, which means we were doing the job in our spare time (Sukhani finished her semester at the beginning though).</p><p>Next step is to update Gradle to 2.4 as soon as possible because Sukhani has started her work on the Java part of Android SDK, which requires Gradle 2.2 or above. Before updating Gradle I need to package the Java SDK for AWS, which enables Gradle to access S3 resources. I also need to make gradle-1.12 as a separate package and use it to build gradle_2.4-1.</p><p>After that, I will start my work on the C/C++ part of Android SDK, which is far more complicated and messy than I had expected. Yet I enjoy the summer coding. Happy coding, all open source developers!</p><p>Finally, feel free to check out my weekly report in Debian‚Äôs mailing list:</p><ul><li>Week 1: <a href="http://lists.alioth.debian.org/pipermail/soc-coordination/2015-May/002462.html" target="_blank" rel="noopener">http://lists.alioth.debian.org/pipermail/soc-coordination/2015-May/002462.html</a></li><li>Week 2: <a href="http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002482.html" target="_blank" rel="noopener">http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002482.html</a></li><li>Week 3: <a href="http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002509.html" target="_blank" rel="noopener">http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002509.html</a></li><li>Week 4: <a href="http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002524.html" target="_blank" rel="noopener">http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002524.html</a></li><li>Week 5: <a href="http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002553.html" target="_blank" rel="noopener">http://lists.alioth.debian.org/pipermail/soc-coordination/2015-June/002553.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://gradle.wpengine.netdna-cdn.com/wp-content/uploads/2015/06/gradlephant-291x300.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;After 5 weeks of work,
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Google Summer of Code Started: Packaging Android SDK for Debian</title>
    <link href="https://seamlik.github.io/blog/posts/Gsoc-2015.html"/>
    <id>https://seamlik.github.io/blog/posts/Gsoc-2015.html</id>
    <published>2015-05-18T05:41:00.000Z</published>
    <updated>2019-12-17T02:50:17.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://1-ps.googleusercontent.com/xk/lUi00NOiZZtaYcm5-HDw_Ypz0k/s.google-melange.appspot.com/www.google-melange.com/soc/content/2-1-20150429/images/gsoc/logo/banner-gsoc2015.png.pagespeed.ce.1-XG35qq3RQ2RCHp3uFT.png" alt=""></p><p>And here it is: I am accepted as a GSoC 2015 student! Actually this has been a while since the result was out in the end of April. When I was applying for this GSoC, I never expected I could be accepted.</p><p>So what is Google Summer of Code, in case someone hasn‚Äôt heard about it at all? Google Summer of Code is an annual activity hosted by Google which gathers college students around the world to contribute to open source softwares. Every year hundreds of open source organizations join GSoC to provide project ideas and mentors, and thousands of students apply to and choose a project and work on it during the summer, and get well paid by Google if they manage to finish the task. This year we have 1051 students accepted with 49 from China and 2 from Taiwan. You can read more details from <a href="http://google-opensource.blogspot.com/2015/05/gsoc-2015-stats-part-1-all-about.html" target="_blank" rel="noopener">this post</a>.</p><p>Although it says so from Geography textbooks and my Geography teacher, I had been not believing that India is a software giant, until I saw that India has the most students accepted and my partner on this project is a girl from India!</p><h2 id="Project-Details"><a href="#Project-Details" class="headerlink" title="Project Details"></a>Project Details</h2><p>The project we will work on this summer is to package Android SDK into Debian. In addition to that, we wil also update the existing packages that is essential to Android development, e.g. Gradle. Although some may say this project is not quite complicated, it still has lots of work to do, which makes it a rather large project that has two students working on it and a co-mentor. My primary mentor is Hans-Christoph Steiner from The Guardian Project and he also wrote a <a href="https://guardianproject.info/2015/04/30/getting-android-tools-into-debian/" target="_blank" rel="noopener">post</a> about the project.</p><p>Why do we need to do this? There are reasons on security, convenience and ideal, but the biggest one for me is that if you use Linux and you write Android apps, or perhaps you are just ready to flash your device a CyanogenMod, there will be no better way than to just type <code>sudo aptitude install adb</code>. More infomation on this project can be found on <a href="http://wiki.debian.org/AndroidTools" target="_blank" rel="noopener">Debian‚Äôs Android Tools Team page</a>.</p><h2 id="Problems-We-Are-Facing"><a href="#Problems-We-Are-Facing" class="headerlink" title="Problems We Are Facing"></a>Problems We Are Facing</h2><p>Currently (mid May) the offical beginning of coding phase has not yet arrived, but we have made a meeting on IRC and confirmed the largest problems we have so far.</p><p>The first problem is the packaging of Gradle. Gradle is a rather new and innovating build automation system, with which most Android apps and the Android SDK tools written in Java are built. It is a building system, so unsurprisingly it is built with itself. In this case, updating Gradle is much harder. Currently Gradle is version 2.4 but the one in Debian is 1.5. In the worst cases, we have to build all versions of Gradle from 1.6 to 2.4 one by one due to its self-dependency.</p><p>In reality, building a project with Gradle is way more easier and happier than any other build system because it handles the dependency in a brilliant way by downloading everything it needs, including Gradle itself. Thus it does not matter if you have installed Gradle or even if you are using Linux or Windows. However when building the Debian package, it seems that we have to abandoned the convenience and make it totally offline and rely only on the things in Debian. This is for security and reproducibility but the packaging will be much more complicated since we have to modify lots of code in the build scripts from upstream source. Also in such case, since the building is restricted to rely on the existing things in a Debian system, quite a few plugins that uses softwares that isn‚Äôt in Debian yet will be excluded from the Debian version of Gradle, which makes it less usable than simply launching the Gradle wrapper. In that case, I suppose there will be very few people really using the Gradle in Debian repository.</p><p>The second problem is how to determine which Git commit we should checkout from the Android SDK repository to build a particular version of the tools. Android SDK does not release its source code in tarball form, so we have to deal with the Git repository. What‚Äôs worse, the tools in Android SDK come from different repositories, and they have almost no infomation on the tools‚Äô version number at all. We can‚Äôt confirm which commit or tag or branch in the repository corresponds to a particular version. And what‚Äôs way worse, Android SDK has 3 parts being SDK-tools, Build-tools and Platform-tools, each of which has defferent version numbers! And what‚Äôs way way worse, I have posted the question to various places and no one had answered me.</p><p>After our IRC discussion, we have been focusing on Gradle. I am still reading documentations about Debian packaging and using Gradle. All I hope now is that we can finish the project nice and fast and no pity will be left in this summer. Also I hope my GSoC T-shirt will be delivered to my home as soon as possible, it‚Äôs really cool!</p><h1 id="Do-You-Want-to-Join-GSoC-as-Well"><a href="#Do-You-Want-to-Join-GSoC-as-Well" class="headerlink" title="Do You Want to Join GSoC as Well?"></a>Do You Want to Join GSoC as Well?</h1><p>Surprisingly, most students in my school haven‚Äôt heard about Google Summer of Code at all, that is why there are only 2 accepted students from Taiwan. But if you know it and you study computer science (or in other ridiculous department related to computer science just like mine), do not hesitate and join the next year‚Äôs! Contribute to open source, and get highly paid (5500 USD this year), is it not really cool? Here I am offering you several tips.</p><p>Before I applied my proposal, I saw a guy from KDE wrote <a href="http://teom.org/blog/kde/how-to-write-a-kick-ass-proposal-for-google-summer-of-code/" target="_blank" rel="noopener">some tips with a shocking title</a>. Reading that is enough I guess, but I still need to list some points:</p><ul><li>Contact your potantial mentors even before you are writing your proposal, that really helps.</li><li>Remember to include a rough schedule in your proposal, it is very important.</li><li>Be interative to your mentor, ask good questions often.</li></ul><p>Have fun in the summer!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://1-ps.googleusercontent.com/xk/lUi00NOiZZtaYcm5-HDw_Ypz0k/s.google-melange.appspot.com/www.google-melange.com/soc/content
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
